# Byte-compiled / optimized / DLL files
__pycache__/

*.py[cod]
=======
  *.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
<<<<<<< HEAD
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
=======
  develop-eggs/
  dist/
  downloads/
  eggs/
  .eggs/
  lib/
  lib64/
  parts/
  sdist/
  var/
  wheels/
  pip-wheel-metadata/
  share/python-wheels/
  *.egg-info/
  .installed.cfg
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
<<<<<<< HEAD
.tox/
.nox/
.coverage
.coverage.*
.cache
=======
  .tox/
  .nox/
  .coverage
.coverage.*
  .cache
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
<<<<<<< HEAD
.pytest_cache/

# Translations
*.mo
=======
  .pytest_cache/
  
  # Translations
  *.mo
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
<<<<<<< HEAD
.webassets-cache
=======
  .webassets-cache
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
<<<<<<< HEAD

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py
=======
  
  # PyBuilder
  target/
  
  # Jupyter Notebook
  .ipynb_checkpoints

# IPython
profile_default/
  ipython_config.py
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/
<<<<<<< HEAD

# Celery stuff
celerybeat-schedule
=======
  
  # Celery stuff
  celerybeat-schedule
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
<<<<<<< HEAD
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
=======
  venv/
  ENV/
  env.bak/
  venv.bak/
  
  # Spyder project settings
  .spyderproject
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
<<<<<<< HEAD
.dmypy.json
=======
  .dmypy.json
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8
dmypy.json

# Pyre type checker
.pyre/
<<<<<<< HEAD
=======
  
# IPYNB
.ipynb_checkpoints
  
# Data
data/
.DS_Store
>>>>>>> 1cde19309670d350424522db08675b5f3c848ff8
